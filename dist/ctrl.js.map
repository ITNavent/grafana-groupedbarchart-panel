{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","d3","panelDefaults","legend","show","position","chartType","labelOrientation","orientation","avgLineShow","labelSpace","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","strokeWidth","fontSize","fontColor","width","height","colorSet","colorSch","GroupedBarChartCtrl","$scope","$injector","$rootScope","hiddenSeries","data","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","addEditorTab","subItem","value","render","forEach","push","d","color","dataList","length","o","groupBy","rows","e","forOwn","i","t","sta","sum","tid","map","s","reduce","x","y","res","label","sort","a","b","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","scope","elem","attrs","ctrl","groupedBarChart","opts","margin","showLegend","legendType","axesConfig","element","find","options","keys","filter","key","avgList","stackVal","valores","name","scale","ordinal","range","category20","draw","select","html","svg","append","attr","style","top","createScales","addAxes","addTooltips","addBar","addLegend","y0","rangeRoundBands","y1","linear","x0","x1","axesScale","xAxis","axis","tickSize","orient","yAxis","domain","rangeBand","chartScale","domainCal","max","xAxisConfig","left","call","selectAll","yAxisConfig","bar","enter","barC","text","tips","elements","elementData","__data__","display","loc","defaultOptions","slice","reverse","onRender","Chart","bottom","right","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport TimeSeries from 'app/core/time_series';\r\nimport * as d3 from './external/d3.v3.min';\r\nimport './css/groupedBarChart.css!';\r\n\r\nconst panelDefaults = {\r\n    legend: {\r\n        show: true,\r\n        position: 'On graph',\r\n    },\r\n    chartType: 'stacked bar chart',\r\n    labelOrientation: 'horizontal',\r\n    orientation: 'vertical',\r\n    avgLineShow: true,\r\n    labelSpace: 40,\r\n    links: [],\r\n    datasource: null,\r\n    maxDataPoints: 3,\r\n    interval: null,\r\n    targets: [{}],\r\n    cacheTimeout: null,\r\n    nullPointMode: 'connected',\r\n    aliasColors: {},\r\n    format: 'short',\r\n    valueName: 'current',\r\n    strokeWidth: 1,\r\n    fontSize: '80%',\r\n    fontColor: '#fff',\r\n    width: 800,\r\n    height: 400,\r\n    colorSet: [],\r\n    colorSch: []\r\n};\r\n\r\nexport class GroupedBarChartCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector, $rootScope) {\r\n        super($scope, $injector);\r\n        this.$rootScope = $rootScope;\r\n        this.hiddenSeries = {};\r\n        this.data = null;\r\n\r\n        _.defaults(this.panel, panelDefaults);\r\n\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/grafana-groupedbarchart-panel/partials/editor.html', 2);\r\n        this.addEditorTab('Colors', 'public/plugins/grafana-groupedbarchart-panel/partials/colors.html', 3);\r\n    }\r\n\r\n    setUnitFormat(subItem) {\r\n        this.panel.format = subItem.value;\r\n        this.render();\r\n    }\r\n\r\n    onDataError() {\r\n        this.render();\r\n    }\r\n\r\n    updateColorSet() {\r\n        this.panel.colorSch = [];\r\n        this.panel.colorSet.forEach(d => this.panel.colorSch.push(d.color));\r\n        this.render();\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        if (dataList && dataList.length) {\r\n            let o = _.groupBy(dataList[0].rows, e => e[0]);\r\n            _.forOwn(o, (e, i) => {\r\n                let t = _.groupBy(e, sta => sta[1]);\r\n                o[i] = _.forOwn(t, (sum, tid) => {t[tid] = sum.map(s => s[2]).reduce((x,y) => x+y)})\r\n            });\r\n\r\n            let res = [];\r\n            _.forOwn(o, (e, i) => {\r\n                e.label = i;\r\n                res.push(e);\r\n            });\r\n            this.data = res.sort((a, b) => {return (a.label>b.label)?-1:((b.label>a.label)?1:0)});\r\n        } else {\r\n            this.data = [\r\n                {label:\"Machine001\", \"Off\":15, \"Down\":50, \"Run\": 0, \"Idle\":40},\r\n                {label:\"Machine002\", \"Off\":15, \"Down\":5, \"Run\":40, \"Idle\":15},\r\n                {label:\"Machine003\", \"Off\":15, \"Down\":30, \"Run\":40, \"Idle\":15},\r\n                {label:\"Machine004\", \"Off\":15, \"Down\":30, \"Run\":80, \"Idle\":15}\r\n            ];\r\n        }\r\n        \r\n        this.render();\r\n    }\r\n\r\n    formatValue(value) {\r\n        let decimalInfo = this.getDecimalsForValue(value);\r\n        let formatFunc = kbn.valueFormats[this.panel.format];\r\n        if (formatFunc) {\r\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        class groupedBarChart {\r\n            constructor(opts) {\r\n                this.data = opts.data;\r\n                this.margin = opts.margin;\r\n                this.width = opts.width;\r\n                this.height = opts.height;\r\n                this.showLegend = opts.legend;\r\n                this.legendType = opts.position;\r\n                this.chartType = opts.chartType;\r\n                this.orientation = opts.orientation;\r\n                this.labelSpace = opts.labelSpace;\r\n                this.fontColor = opts.fontColor;\r\n                this.labelOrientation = opts.labelOrientation;\r\n                this.avgLineShow = opts.avgLineShow;\r\n                this.axesConfig = [];\r\n                this.element = elem.find(opts.element)[0];\r\n                this.options = d3.keys(this.data[0]).filter(function(key) { return key !== 'label'; });\r\n                this.avgList = {};\r\n                this.options.forEach(d => {this.avgList[d] = 0});\r\n                this.options = this.options.filter(d => d!=='valores');\r\n                this.data.forEach(d => {\r\n                    let stackVal = 0;\r\n                    d.valores = this.options.map((name, i, o) => {\r\n                        if (i !== 0) stackVal = stackVal + (+d[o[i-1]]);\r\n                        this.avgList[name] = this.avgList[name] + d[name];\r\n                        return {name: name, value: +d[name], stackVal: stackVal};\r\n                    });\r\n                });\r\n                this.options.forEach(d => {\r\n                    this.avgList[d] /= this.data.length;\r\n                });\r\n                if (opts.color.length == 0) {\r\n                    this.color = d3.scale.ordinal()\r\n                        .range(d3.scale.category20().range());\r\n                } else {\r\n                    this.color = d3.scale.ordinal()\r\n                        .range(opts.color);\r\n                }\r\n\r\n                this.draw();\r\n            }\r\n\r\n            draw() {\r\n                d3.select(this.element).html(\"\");\r\n                this.svg = d3.select(this.element).append('svg');\r\n                this.svg.attr('width', this.width)\r\n                    .attr('height', this.height)\r\n                    // .attr('viewBox', `0, 0, ${this.width}, ${this.height}`)\r\n                    .attr('preserveAspectRatio', 'xMinYMin meet')\r\n                    .style('padding', '10px')\r\n                    .attr('transform', `translate(0, ${this.margin.top})`);\r\n\r\n                this.createScales();\r\n                this.addAxes();\r\n                this.addTooltips();\r\n                this.addBar();\r\n                d3.select(this.element).attr('style', `width: ${this.width*1.5}px; height: ${this.height*1.5}px`);\r\n                if (this.showLegend) this.addLegend(this.legendType);\r\n            }\r\n\r\n            createScales() {\r\n                switch(this.orientation) {\r\n                    case 'horizontal':\r\n                        this.y0 = d3.scale.ordinal()\r\n                            .rangeRoundBands([+this.height, 0], .2, 0.5);\r\n\r\n                        this.y1 = d3.scale.ordinal();\r\n\r\n                        this.x = d3.scale.linear()\r\n                            .range([0, +this.width]);\r\n                        this.axesConfig = [this.x, this.y0, this.y0, this.y1, this.x];\r\n                        break;\r\n                    case 'vertical':\r\n                        this.x0 = d3.scale.ordinal()\r\n                            .rangeRoundBands([0, +this.width], .2, 0.5);\r\n\r\n                        this.x1 = d3.scale.ordinal();\r\n\r\n                        this.y = d3.scale.linear()\r\n                            .range([0, +this.height]);\r\n                        \r\n                        this.axesConfig = [this.x0, this.y, this.x0, this.x1, this.y];\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            addAxes() {\r\n                let axesScale = 1.1;\r\n                this.xAxis = d3.svg.axis()\r\n                    .scale(this.axesConfig[0])\r\n                    .tickSize(-this.height)\r\n                    .orient('bottom');\r\n\r\n                this.yAxis = d3.svg.axis()\r\n                    .scale(this.axesConfig[1])\r\n                    .orient('left');\r\n\r\n                this.axesConfig[2].domain(this.data.map(d => { return d.label; }));\r\n                this.axesConfig[3].domain(this.options).rangeRoundBands([0, this.axesConfig[2].rangeBand()]);\r\n\r\n                let chartScale = (this.chartType === 'bar chart') ? 0 : 1;\r\n                let domainCal = (this.orientation === 'horizontal') \r\n                    ? [0, d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); })]\r\n                    : [d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); }), 0];\r\n                this.axesConfig[4].domain(domainCal);\r\n\r\n                let xAxisConfig = this.svg.append('g')\r\n                    .attr('class', 'x axis')\r\n                    .attr('transform', `translate(${this.margin.left}, ${this.height + this.margin.top})`)\r\n                    .call(this.xAxis)\r\n                    .selectAll('text')\r\n                    .style('fill', `${this.fontColor}`)\r\n\r\n                switch(this.labelOrientation) {\r\n                    case 'horizontal':\r\n                        break;\r\n                    case '45 degrees':\r\n                        xAxisConfig.style('text-anchor', 'end')\r\n                            .style('transform', 'rotate(-45deg)');\r\n                        break;\r\n                    case 'vertical':\r\n                        xAxisConfig.style('text-anchor', 'end')\r\n                            .style('transform', 'rotate(-90deg)');\r\n                        break;\r\n                }\r\n\r\n                let yAxisConfig = this.svg.append('g')\r\n                    .attr('class', 'y axis')\r\n                    .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n                    .style('fill', `${this.fontColor}`)\r\n                    .call(this.yAxis)\r\n\r\n                yAxisConfig.selectAll('text')\r\n                    .style('fill', `${this.fontColor}`);\r\n                yAxisConfig.selectAll('path')\r\n                    .style('stroke', `${this.fontColor}`);\r\n                \r\n            }\r\n\r\n            addBar() {\r\n                let scale = (this.chartType === 'bar chart') ? 1 : this.options.length;\r\n                switch(this.orientation) {\r\n                    case 'horizontal':\r\n                        this.avgLineShow && this.options.forEach(d => {\r\n                            this.svg.append('line')\r\n                                .attr('x1', this.x(this.avgList[d]))\r\n                                .attr('y1', this.height)\r\n                                .attr('x2', this.x(this.avgList[d]))\r\n                                .attr('y2', 0)\r\n                                .attr('class', `${d} avgLine`)\r\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n                                .style('display', 'none')\r\n                                .style('stroke-width', 2)\r\n                                .style('stroke', this.color(d))\r\n                                .style('stroke-opacity', 0.7);\r\n                        });\r\n\r\n                        this.bar = this.svg.selectAll('.bar')\r\n                            .data(this.data)\r\n                            .enter().append('g')\r\n                            .attr('class', 'rect')\r\n                            .attr('transform', d => {\r\n                                return `translate(${this.margin.left}, ${this.y0(d.label) + this.margin.top})`;\r\n                            });\r\n\r\n                        this.barC = this.bar.selectAll('rect')\r\n                            .data(d => { return d.valores; })\r\n                            .enter();\r\n\r\n                        \r\n                        this.barC.append('rect')\r\n                            .attr('height', this.y1.rangeBand()*scale)\r\n                            .attr('y', d => { \r\n                                return (this.chartType === 'bar chart') ? this.y1(d.name) : this.y0(d.label);\r\n                            })\r\n                            .attr('x', d => { \r\n                                return (this.chartType === 'bar chart') ? 0 : this.x(d.stackVal);\r\n                            })\r\n                            .attr('value', d => { return d.name;})\r\n                            .attr('width', (d) => { return this.x(d.value);})\r\n                            .style('fill', d => { return this.color(d.name);});\r\n\r\n                        break;\r\n                    case 'vertical':\r\n                        this.avgLineShow && this.options.forEach(d => {\r\n                            this.svg.append('line')\r\n                                .attr('x1', 0)\r\n                                .attr('y1', this.y(this.avgList[d]))\r\n                                .attr('x2', +this.width)\r\n                                .attr('y2', this.y(this.avgList[d]))\r\n                                .attr('class', `${d} avgLine`)\r\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n                                .style('display', 'none')\r\n                                .style('stroke-width', 2)\r\n                                .style('stroke', this.color(d))\r\n                                .style('stroke-opacity', 0.7)\r\n                        });\r\n\r\n                        this.bar = this.svg.selectAll('.bar')\r\n                            .data(this.data)\r\n                            .enter().append('g')\r\n                            .attr('class', 'rect')\r\n                            .attr('transform', (d, i) => {\r\n                                return `translate(${this.x0(d.label)}, ${+this.height + this.margin.top})`;\r\n                            });\r\n\r\n                        this.barC = this.bar.selectAll('rect')\r\n                            .data(d => { return d.valores.map(e => { e.label = d.label; return e;}); })\r\n                            .enter();\r\n\r\n                        this.barC.append('rect')\r\n                            .attr('id', (d, i) => { return `${d.label}_${i}`;})\r\n                            .attr('height', d => { return +this.height - this.y(d.value);})\r\n                            .attr('y', d => { \r\n                                return (this.chartType === 'bar chart') ? this.y(d.value) - this.height :  (this.y(d.value) - 2*(+this.height) + this.y(d.stackVal));\r\n                            })\r\n                            .attr('x', (d, i) => { \r\n                                return (this.chartType === 'bar chart') ? this.x1(d.name) + this.margin.left : this.x1(d.name) - this.x1.rangeBand()*i + this.margin.left;\r\n                            })\r\n                            .attr('value', d => { return d.name;})\r\n                            .attr('width', this.x1.rangeBand()*scale)\r\n                            .style('fill', d => { return this.color(d.name);});\r\n\r\n                        break;\r\n                }\r\n\r\n                (this.chartType === 'bar chart') && this.barC.append('text')\r\n                    .attr('x', d => { \r\n                        return (this.orientation === 'horizontal') \r\n                        ? this.x(d.value) +5\r\n                        : this.x1(d.name) + this.x1.rangeBand()/4 + this.margin.left;  \r\n                    })\r\n                    .attr('y', d => { \r\n                        return (this.orientation === 'horizontal')\r\n                        ? this.y1(d.name) +(this.y1.rangeBand()/2)\r\n                        : this.y(d.value) - this.height -8; \r\n                    })\r\n                    .attr('dy', '.35em')\r\n                    .style('fill', `${this.fontColor}`)\r\n                    .text(d => { return d.value ? d.value : ''; });\r\n\r\n                this.bar.on('mouseover', d => {\r\n                    this.tips.style('left', `${10}px`);\r\n                    this.tips.style('top', `${15}px`);\r\n                    this.tips.style('display', \"inline-block\");\r\n                    let elements = d3.selectAll(':hover')[0];\r\n                    let elementData = elements[elements.length-1].__data__;\r\n                    this.tips.html(`${d.label} , ${elementData.name} ,  ${elementData.value}`);\r\n                    if (this.avgLineShow) d3.selectAll(`.${elementData.name}`)[0][0].style.display = '';\r\n                });\r\n\r\n                this.bar.on('mouseout', d => {\r\n                    this.tips.style('display', \"none\");\r\n                    d3.selectAll('.avgLine')[0].forEach(d => {\r\n                       d.style.display = 'none';\r\n                    });\r\n                });\r\n            }\r\n\r\n            addLegend(loc) {\r\n                let labelSpace = this.labelSpace;\r\n                switch(loc) {\r\n                    case 'On graph':\r\n                        let defaultOptions = (this.chartType == 'bar chart' || this.orientation == 'horizontal') ? this.options.slice(): this.options.slice().reverse();\r\n                        this.legend = this.svg.selectAll('.legend')\r\n                            .data(defaultOptions)\r\n                            .enter().append('g')\r\n                            .attr('class', 'legend')\r\n                            .attr('transform', (d, i) => { return `translate(50,${i*20 + this.margin.top})`; });\r\n\r\n                        this.legend.append('rect')\r\n                            .attr('x', this.width*1.1 - 18)\r\n                            .attr('width', 18)\r\n                            .attr('height', 18)\r\n                            .style('fill', this.color);\r\n\r\n                        this.legend.append('text')\r\n                            .attr('x', this.width*1.1 - 24)\r\n                            .attr('y', 9)\r\n                            .attr('dy', '.35em')\r\n                            .style('text-anchor', 'end')\r\n                            .style('fill', `${this.fontColor}`)\r\n                            .text(d => { return d; });\r\n                        break;\r\n                    case 'Under graph':\r\n                        this.legend = this.svg.selectAll('.legend')\r\n                            .data(this.options.slice())\r\n                            .enter().append('g')\r\n                            .attr('class', 'legend')\r\n                            .attr('transform', (d, i) => { return `translate(${+i*labelSpace - this.width},${+this.height + 24 + this.margin.top})`; });\r\n\r\n                        this.legend.append('rect')\r\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1 +0);})\r\n                            .attr('width', 18)\r\n                            .attr('height', 18)\r\n                            .style('fill', this.color);\r\n\r\n                        this.legend.append('text')\r\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1) +5; })\r\n                            .attr('dx', 18)\r\n                            .attr('dy', '1.1em')\r\n                            .style('text-anchor', 'start')\r\n                            .style('fill', `${this.fontColor}`)\r\n                            .text(d => { return d; });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n            addTooltips() {\r\n                this.tips = d3.select(this.element).append('div')\r\n                    .attr('class', 'toolTip');\r\n            }\r\n        }\r\n\r\n        function onRender() {\r\n            if(!ctrl.data) return;\r\n            var Chart = new groupedBarChart({\r\n                data: ctrl.data,\r\n                margin: {top: 30, left: 80, bottom: 10, right: 10},\r\n                element: '#chart',\r\n                width: ctrl.panel.width,\r\n                height: ctrl.panel.height,\r\n                legend: ctrl.panel.legend.show,\r\n                fontColor: ctrl.panel.fontColor,\r\n                position: ctrl.panel.legend.position,\r\n                chartType: ctrl.panel.chartType,\r\n                orientation: ctrl.panel.orientation,\r\n                labelOrientation: ctrl.panel.labelOrientation,\r\n                labelSpace: ctrl.panel.labelSpace,\r\n                avgLineShow: ctrl.panel.avgLineShow,\r\n                color: ctrl.panel.colorSch\r\n            });\r\n\r\n            ctrl.panel.colorSet = [];\r\n            Chart.options.forEach(d => {\r\n                ctrl.panel.colorSet.push({text: d, color: Chart.color(d)});\r\n            });\r\n        }\r\n\r\n        this.events.on('render', function() {\r\n            onRender();\r\n        });\r\n    }\r\n}\r\n\r\nGroupedBarChartCtrl.templateUrl = 'partials/module.html';"]}